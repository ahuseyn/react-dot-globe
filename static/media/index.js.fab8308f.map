{"version":3,"file":"index.js","sources":["../src/assets/map.png","../src/initCamera.js","../src/initGlobe.js","../src/helpers.js","../src/setCurves.js","../src/setMarkers.js","../src/index.js"],"sourcesContent":["/* loaded by smart-asset */\nexport default \"map~tsZoNowe.png\"","import { ArcRotateCamera, Vector3 } from '@babylonjs/core'\nexport default function initCamera(\n  scene,\n  position,\n  minZoom,\n  maxZoom,\n  zoomSpeed\n) {\n  const camera = new ArcRotateCamera('Camera', 0, 0, 5, Vector3.Zero(), scene)\n  camera.setTarget(Vector3.Zero())\n\n  const canvas = scene.getEngine().getRenderingCanvas()\n  camera.attachControl(canvas, true)\n  camera.setPosition(new Vector3(...position))\n  camera.lowerRadiusLimit = minZoom\n  camera.upperRadiusLimit = maxZoom\n  camera.wheelPrecision = zoomSpeed\n}\n","import {\n  Color3,\n  MeshBuilder,\n  Space,\n  StandardMaterial,\n  Texture,\n  Vector3\n} from '@babylonjs/core'\n\nexport default function initGlobe(\n  globe,\n  radius,\n  texture,\n  pointDiameter,\n  pointHeight,\n  pointSegments,\n  pointColor\n) {\n  return new Promise((resolve, reject) => {\n    const center = globe.getAbsolutePosition()\n    const radian = Math.PI / 180\n    const pointRenderTreshold = 50\n\n    // Material of points\n    const material = new StandardMaterial('PointsMaterial')\n    material.emissiveColor = Color3.White()\n    material.freeze()\n\n    // Source mesh\n    const mesh = MeshBuilder.CreateCylinder('BasePoint', {\n      diameter: pointDiameter,\n      height: pointHeight,\n      tessellation: pointSegments\n    })\n    mesh.material = new StandardMaterial('PointsMaterial')\n    mesh.material.emissiveColor = Color3.White()\n    mesh.position.y = -radius\n    mesh.registerInstancedBuffer('color', 3)\n    mesh.instancedBuffers.color = new Color3.FromHexString(pointColor)\n\n    // Optional optiomization tools\n    mesh.doNotSyncBoundingInfo = true\n    mesh.convertToUnIndexedMesh()\n    mesh.freezeWorldMatrix()\n    mesh.setEnabled(false)\n\n    // Load map texture\n    const pointsTexture = new Texture(texture)\n\n    // Render point instances\n    Texture.WhenAllReady([pointsTexture], function () {\n      pointsTexture.readPixels().then((pixels) => {\n        for (let i = 0; i < pixels.length; i++) {\n          if (Number.isInteger(i / 4) && pixels[i] > pointRenderTreshold) {\n            const x = ((i / 4) * 2.25 - 270) * radian\n            const y = ((i / -640) * 2.25 - 90) * radian\n            const point = mesh.createInstance('p' + i / 4)\n            point.parent = globe\n            point.position = new Vector3(\n              Math.cos(y) * Math.cos(x) * radius,\n              Math.sin(y) * radius,\n              Math.cos(y) * Math.sin(x) * radius\n            )\n            point.lookAt(center)\n            point.setPivotPoint(new Vector3(0, pointHeight / 2, 0))\n            point.rotate(new Vector3(1, 0, 0), Math.PI / 2, Space.LOCAL)\n            // point.freezeWorldMatrix()\n          }\n        }\n\n        resolve()\n      })\n    })\n  })\n}\n","import { Vector3 } from '@babylonjs/core'\n\nexport function controlPoints(p1, p2) {\n  const np1 = Vector3.Zero()\n  const np2 = Vector3.Zero()\n\n  Vector3.SlerpToRef(p1, p2, 0.3, np1)\n  Vector3.SlerpToRef(p1, p2, 0.7, np2)\n\n  np1.scaleInPlace(harvesine(p1, p2))\n  np2.scaleInPlace(harvesine(p1, p2))\n\n  return [np1, np2]\n}\n\nexport const polarToCartesian = (lat, lon, rad) => {\n  const dlat = (lat * Math.PI) / 180\n  const dlon = (lon * Math.PI) / -180\n  const x = Math.cos(dlat) * Math.sin(dlon) * rad\n  const y = Math.sin(dlat) * rad\n  const z = Math.cos(dlat) * Math.cos(dlon) * rad\n\n  return new Vector3(x, y, z)\n}\n\nexport const compareArray = (prev, curr, key) =>\n  prev.filter((x) => !curr.some((y) => y[key] === x[key]))\n\n// Source: https://answers.unity.com/questions/272194/calcualte-the-arc-distance-between-2-points-on-a-s.html\nconst harvesine = (v1, v2) =>\n  Math.acos(Vector3.Dot(v1.normalizeToNew(), v2.normalizeToNew())) / 2.2 + 1\n","import {\n  Color3,\n  Curve3,\n  MeshBuilder,\n  Vector3,\n  VertexBuffer\n} from '@babylonjs/core'\nimport { compareArray, controlPoints, polarToCartesian } from './helpers'\n\nexport default function setCurves(\n  scene,\n  globe,\n  radius,\n  curves = [],\n  prevCurves = []\n) {\n  const removed = compareArray(prevCurves, curves, 'name')\n  const added = compareArray(curves, prevCurves, 'name')\n  const updated = curveUpdateCheck(curves, prevCurves, 'color')\n\n  if (added.length > 0) {\n    init(scene, globe, radius, added)\n  }\n  if (removed.length > 0) {\n    clear(scene, removed)\n  }\n  if (updated.length > 0) {\n    update(scene, updated)\n  }\n}\n\n// Check if curve updated\nconst curveUpdateCheck = (curr, prev, key) =>\n  curr.filter((x) => prev.some((y) => y.name === x.name && y[key] !== x[key]))\n\n// Update curves\nfunction update(scene, curves) {\n  for (let x = 0; x < curves.length; x++) {\n    scene.getMeshByName(curves[x].name).color = new Color3.FromHexString(\n      curves[x].color\n    )\n  }\n}\n\n// Init curves\nfunction init(scene, globe, radius, curves) {\n  const meshes = globe.getChildren()\n\n  for (let x = 0; x < curves.length; x++) {\n    const target1 = polarToCartesian(\n      curves[x].point1[0],\n      curves[x].point1[1],\n      radius\n    )\n\n    const target2 = polarToCartesian(\n      curves[x].point2[0],\n      curves[x].point2[1],\n      radius\n    )\n\n    const cPoint1 = meshes.reduce((prev, next) => {\n      if (prev.position && next.position) {\n        return Vector3.Distance(target1, next.position) <=\n          Vector3.Distance(target1, prev.position)\n          ? next\n          : prev\n      }\n    })\n\n    const cPoint2 = meshes.reduce((prev, next) => {\n      if (prev.position && next.position) {\n        return Vector3.Distance(target2, next.position) <=\n          Vector3.Distance(target2, prev.position)\n          ? next\n          : prev\n      }\n    })\n\n    build(\n      cPoint1.position,\n      cPoint2.position,\n      5,\n      { name: curves[x].name, type: curves[x].type, color: curves[x].color },\n      scene,\n      curves[x].segments,\n      curves[x].animationSpeed\n    )\n  }\n}\n\n// Clear curves\nfunction clear(scene, curves) {\n  for (let x = 0; x < curves.length; x++) {\n    const curve = scene.getMeshByName(curves[x].name)\n    const pointsRaw = curve.getVerticesData(VertexBuffer.PositionKind)\n    const points = []\n\n    for (let x = 0; x < pointsRaw.length / 3; x++) {\n      points.push(Vector3.FromArray(pointsRaw, x * 3))\n    }\n\n    animate(\n      points,\n      curve,\n      curves[x].name,\n      curves[x].animationSpeed,\n      curves[x].segments,\n      curves[x].clearAnimation\n    )\n  }\n}\n\n// Builds single curve\nfunction build(v2, v1, rad, options, scene, segments, animationSpeed) {\n  const controls = controlPoints(v1, v2, rad, scene)\n  const points = Curve3.CreateCubicBezier(\n    v1,\n    controls[0],\n    controls[1],\n    v2,\n    segments\n  ).getPoints()\n\n  const curve = MeshBuilder.CreateLines(options.name, {\n    points: Array.from({ length: points.length }, () => points[0]),\n    updatable: true\n  })\n\n  curve.doNotSyncBoundingInfo = true\n  curve.freezeWorldMatrix()\n\n  animate(points, curve, options.name, animationSpeed, segments, 'init')\n\n  curve.color = new Color3.FromHexString(options.color)\n}\n\n// Animates single curve\nfunction animate(points, curve, name, speed, segments, type) {\n  const length = points.length\n\n  for (let i = 1; i < points.length; i++) {\n    setTimeout(() => {\n      curve = MeshBuilder.CreateLines(name, {\n        points: animationSteps(points, type, length, i),\n        instance: curve\n      })\n\n      if (type !== 'init' && i === length - 1) {\n        return curve.dispose()\n      }\n    }, (speed / segments) * i)\n  }\n}\n\n// Animation types\nfunction animationSteps(points, type, len, i) {\n  switch (type) {\n    case 'init':\n      return points\n        .slice(0, i)\n        .concat(Array.from({ length: len - i }, () => points[i]))\n    case 'backward':\n      return points\n        .slice(0, -i)\n        .concat(Array.from({ length: len + i }, () => points[len - 1 - i]))\n    case 'forward':\n      return points.slice(-(len - i), len)\n  }\n}\n","import { Color3, Tags, Vector3 } from '@babylonjs/core'\nimport { polarToCartesian } from './helpers'\n\nexport default function setMarkers(\n  scene,\n  globe,\n  radius,\n  markers,\n  diameter,\n  height,\n  color\n) {\n  const meshes = globe.getChildren()\n  const oldMarkers = scene.getMeshesByTags('marked')\n\n  oldMarkers.forEach((item) => {\n    item.instancedBuffers.color = new Color3.FromHexString(color)\n    item.scaling = new Vector3(1, 1, 1)\n    item.freezeWorldMatrix()\n    Tags.RemoveTagsFrom(item, 'marked')\n  })\n\n  for (let x = 0; x < markers.length; x++) {\n    const marker = markers[x]\n    const target = polarToCartesian(\n      marker.coordinates[0],\n      marker.coordinates[1],\n      radius\n    )\n\n    const cPoint = meshes.reduce((prev, next) => {\n      if (prev.position && next.position) {\n        return Vector3.Distance(target, next.position) <=\n          Vector3.Distance(target, prev.position)\n          ? next\n          : prev\n      }\n    })\n\n    if (cPoint) {\n      cPoint.unfreezeWorldMatrix()\n      cPoint.name = marker.name\n      cPoint.instancedBuffers.color = new Color3.FromHexString(marker.color)\n      cPoint.scaling.x = marker.diameter / diameter\n      cPoint.scaling.y = marker.height / height\n      cPoint.scaling.z = marker.diameter / diameter\n\n      Tags.AddTagsTo(cPoint, 'marked')\n    }\n  }\n}\n","import {\n  Color3,\n  Engine,\n  Scene,\n  Space,\n  TransformNode,\n  Vector3\n} from '@babylonjs/core'\nimport React from 'react'\nimport mapTexture from './assets/map.png'\nimport initCamera from './initCamera'\nimport initGlobe from './initGlobe'\nimport setCurves from './setCurves'\nimport setMarkers from './setMarkers'\n\nexport default class ReactDotGlobe extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.radius = 5\n    this.canvas = React.createRef()\n  }\n\n  componentDidMount() {\n    if (this.canvas.current) {\n      this.engine = new Engine(this.canvas.current)\n      this.scene = new Scene(this.engine)\n      this.scene.clearColor = new Color3.FromHexString(\n        this.props.backgroundColor\n      )\n      this.scene.blockMaterialDirtyMechanism = true\n      this.scene.autoClearDepthAndStencil = false\n      this.scene.freeActiveMeshes()\n      this.scene.onPointerUp = this.props.onClick\n\n      this.globe = new TransformNode('Globe', this.scene)\n\n      // Initialize camera and globe\n      if (this.scene.isReady()) {\n        initCamera(\n          this.scene,\n          this.props.cameraPosition,\n          this.props.cameraMinZoom,\n          this.props.cameraMaxZoom,\n          this.props.cameraZoomSpeed\n        )\n\n        initGlobe(\n          this.globe,\n          this.radius,\n          this.props.globeTexture,\n          this.props.dotDiameter,\n          this.props.dotHeight,\n          this.props.dotSegments,\n          this.props.dotColor\n        ).then(() => {\n          if (this.props.markers.length > 0) {\n            setMarkers(\n              this.scene,\n              this.globe,\n              this.radius,\n              this.props.markers,\n              this.props.dotDiameter,\n              this.props.dotHeight,\n              this.props.dotColor\n            )\n          }\n          if (this.props.curves.length > 0) {\n            setCurves(this.scene, this.globe, this.radius, this.props.curves)\n          }\n        })\n      } else {\n        this.scene.onReadyObservable.addOnce((scene) => {\n          initCamera(\n            scene,\n            this.props.cameraPosition,\n            this.props.cameraMinZoom,\n            this.props.cameraMaxZoom,\n            this.props.zoomSpeed\n          )\n          initGlobe(\n            this.globe,\n            this.radius,\n            this.props.globeTexture,\n            this.props.dotDiameter,\n            this.props.dotHeight,\n            this.props.dotSegments,\n            this.props.dotColor\n          )\n        })\n      }\n\n      // Run engine\n      this.engine.runRenderLoop(() => {\n        this.globe.rotate(\n          new Vector3(...this.props.globeRotationAxis),\n          this.props.globeRotationSpeed,\n          Space.LOCAL\n        )\n\n        this.scene.render()\n      })\n\n      // Resize scene on window resize\n      this.resize = () => this.scene.getEngine().resize()\n\n      if (window) {\n        window.addEventListener('resize', this.resize)\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.markers !== this.props.markers) {\n      setMarkers(\n        this.scene,\n        this.globe,\n        this.radius,\n        this.props.markers,\n        this.props.dotDiameter,\n        this.props.dotHeight,\n        this.props.dotColor\n      )\n    }\n    if (prevProps.curves !== this.props.curves) {\n      setCurves(\n        this.scene,\n        this.globe,\n        this.radius,\n        this.props.curves,\n        prevProps.curves\n      )\n    }\n  }\n\n  componentWillUnmount() {\n    this.scene.getEngine().dispose()\n\n    if (window) {\n      window.removeEventListener('resize', this.resize)\n    }\n  }\n\n  render() {\n    return <canvas ref={this.canvas} className={this.props.className} />\n  }\n}\n\nReactDotGlobe.defaultProps = {\n  className: 'dotGlobe',\n  backgroundColor: '#040d50',\n  cameraPosition: [-6, 10, -10],\n  cameraMinZoom: 10,\n  cameraMaxZoom: 500,\n  cameraZoomSpeed: 100,\n  globeTexture: require(`./${mapTexture}`),\n  globeRotationAxis: [0, 1, 0],\n  globeRotationSpeed: 0,\n  dotDiameter: 0.05,\n  dotHeight: 0.01,\n  dotSegments: 8,\n  dotColor: '#f59c1a',\n  markers: [],\n  curves: [],\n  onClick: () => {}\n}\n"],"names":["initCamera","scene","position","minZoom","maxZoom","zoomSpeed","camera","ArcRotateCamera","Vector3","Zero","setTarget","canvas","getEngine","getRenderingCanvas","attachControl","setPosition","lowerRadiusLimit","upperRadiusLimit","wheelPrecision","initGlobe","globe","radius","texture","pointDiameter","pointHeight","pointSegments","pointColor","Promise","resolve","reject","center","getAbsolutePosition","radian","Math","PI","pointRenderTreshold","material","StandardMaterial","emissiveColor","Color3","White","freeze","mesh","MeshBuilder","CreateCylinder","diameter","height","tessellation","y","registerInstancedBuffer","instancedBuffers","color","FromHexString","doNotSyncBoundingInfo","convertToUnIndexedMesh","freezeWorldMatrix","setEnabled","pointsTexture","Texture","WhenAllReady","readPixels","then","pixels","i","length","Number","isInteger","x","point","createInstance","parent","cos","sin","lookAt","setPivotPoint","rotate","Space","LOCAL","controlPoints","p1","p2","np1","np2","SlerpToRef","scaleInPlace","harvesine","polarToCartesian","lat","lon","rad","dlat","dlon","z","compareArray","prev","curr","key","filter","some","v1","v2","acos","Dot","normalizeToNew","setCurves","curves","prevCurves","removed","added","updated","curveUpdateCheck","init","clear","update","name","getMeshByName","meshes","getChildren","target1","point1","target2","point2","cPoint1","reduce","next","Distance","cPoint2","build","type","segments","animationSpeed","curve","pointsRaw","getVerticesData","VertexBuffer","PositionKind","points","push","FromArray","animate","clearAnimation","options","controls","Curve3","CreateCubicBezier","getPoints","CreateLines","Array","from","updatable","speed","setTimeout","animationSteps","instance","dispose","len","slice","concat","setMarkers","markers","oldMarkers","getMeshesByTags","forEach","item","scaling","Tags","RemoveTagsFrom","marker","target","coordinates","cPoint","unfreezeWorldMatrix","AddTagsTo","ReactDotGlobe","props","React","createRef","componentDidMount","current","engine","Engine","Scene","clearColor","backgroundColor","blockMaterialDirtyMechanism","autoClearDepthAndStencil","freeActiveMeshes","onPointerUp","onClick","TransformNode","isReady","cameraPosition","cameraMinZoom","cameraMaxZoom","cameraZoomSpeed","globeTexture","dotDiameter","dotHeight","dotSegments","dotColor","onReadyObservable","addOnce","runRenderLoop","globeRotationAxis","globeRotationSpeed","render","resize","window","addEventListener","componentDidUpdate","prevProps","componentWillUnmount","removeEventListener","className","PureComponent","defaultProps","require","mapTexture"],"mappings":"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"}